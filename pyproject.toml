[tool.poetry]
name = "alteia"
version = "2.16.1"  # must match the version in alteia/__init__.py
description = "High-level Python interface to Alteia API"
authors = ["Alteia Backend team <backend-team@alteia.com>"]
repository = "https://github.com/alteia-ai/alteia-python-sdk"
documentation = "https://alteia.readthedocs.io/en/latest/index.html"
license = "MIT"
readme = "README.md"
keywords = ["sdk",
            "alteia"]
packages = [{ include = "alteia" },]
include = ["core/utils/vertcrs/*.wkt", "py.typed"]
exclude = ["docs", "tests*"]
classifiers=[
        'Development Status :: 5 - Production/Stable',
        'Intended Audience :: Developers',
        'Topic :: Software Development :: Build Tools',
        'License :: OSI Approved :: MIT License',
        'Programming Language :: Python :: 3',
        'Programming Language :: Python :: 3.11',
        'Programming Language :: Python :: 3.12',
        'Programming Language :: Python :: 3.13',
      ]

[tool.poetry.dependencies]
python = "^3.11"
urllib3 = "^2.2.3"
appdirs = "^1.4.3"
pathvalidate = "^3.2.1"
semantic-version = "^2.8.5"
importlib-resources = {version = ">=1.4", python = "<3.7"}
legacy-cgi = {version = ">=2.6.1", python = ">3.12"}
sphinx = {version = "^8.1.3", optional = true }
sphinx_autodoc_typehints = {version = "^2.5.0", optional = true }
sphinx-autobuild = {version = "^2024.10.3", optional = true }
recommonmark = {version = "^0.7.1", optional = true }
docutils = "^0.21.2"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
nox = "^2024.10.9"
nox-poetry = "^1.0.3"

[tool.poetry.group.pre-commit]
optional = true

[tool.poetry.group.pre-commit.dependencies]
pre-commit = "*"

[tool.poetry.extras]
documentation = [
    "sphinx",
    "sphinx_autodoc_typehints",
    "sphinx-autobuild",
    "recommonmark"
]

[tool.poetry.group.format]
optional = true

[tool.poetry.group.format.dependencies]
ruff = "^0.8.1"


[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
ruff = "^0.8.1"
mypy = "^1.13.0"

[tool.poetry.group.tests]
optional = true

[tool.poetry.group.tests.dependencies]
coverage = {extras = ["toml"], version = "^7.6.4"}
pytest-cov = "^6.0.0"

[tool.mypy]
ignore_missing_imports = false
namespace_packages = true

[[tool.mypy.overrides]]
module = "urllib3.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "appdirs"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pathvalidate"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "semantic_version"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "importlib_resources"
ignore_missing_imports = true

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.isort]
known_third_party = ["appdirs", "nox", "pathvalidate", "semantic_version", "urllib3"]
multi_line_output=3
include_trailing_comma="True"
line_length=88
use_parentheses="True"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
line-length = 120
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv"
]
